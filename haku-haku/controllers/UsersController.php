<?php

class UsersController extends BaseController
{
    function index()
    {
        parent::index(); // TODO: Change the autogenerated stub
    }

    function register()
    {
        if ($this->isPost) {
            $username = $_POST['username'];
            $email = $_POST['email'];
            $confirm_email = $_POST['confirm_email'];
            $password = $_POST['password'];
            $confirm_password = $_POST['confirm_password'];

            //name can contain only alpha characters, digits, dash and underscore
            if (!preg_match("/^[a-zA-Z0-9_-]{5,}$/", $username)) {
                $this->setValidationError("username", "Username must contain only alphabets and space");
            }
            // checking for valid email
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $this->setValidationError("email", "Please enter a valid email address");
            }

            if ($email != $confirm_email) {
                $this->setValidationError("confirm-email", "Email and Confirm Email doesn't match");
                //$confirm_email_error = "Email and Confirm Email doesn't match";
            }
            // password can contain at least 6 characters
            if (strlen($password) < 6) {
                $this->setValidationError("password", "Password must be minimum of 6 characters");
            }
            // check whether password matches with confirm password
            if ($password != $confirm_password) {
                $this->setValidationError("confirm-password", "Password and Confirm Password doesn't match");
            }

            $password_hash = password_hash($password, PASSWORD_BCRYPT);

            $isExistingUser = $this->model->isUserExistsByEmail($email);

            //if user exist set user existing msg and redirect to register
            if ($isExistingUser) {
                $this->setValidationError("already_exists", "User with this email already exists!");

            } else { // if not exists

                if ($this->formValid()) {
                    if ($this->model->register($username, $password_hash, $email)) {
                        $_SESSION['logged_in'] = true;
                        $_SESSION['username'] = $username;
                        $_SESSION['message'] = 'You are successfully registered!';

                        header('Location: ' . APP_ROOT);
                    } else {
                        $this->addErrorMessage("Registration failed.");
                    }
                }

            }
        }
    }

    function login()
    {
        if ($this->isPost) {
            $username = $_POST['username'];
            $password = $_POST['password'];
            $isUserExists = $this->model->isUserExistsByUsername($username);

            // user exists
            if ($isUserExists) {
                $currentUser = $this->model->login($username);
                if (password_verify($password, $currentUser['password'])) {
                    $_SESSION['userId'] = $currentUser['id'];
                    $_SESSION['username'] = $currentUser['username'];
                    $_SESSION['logged_in'] = true;
                    $_SESSION['message'] = 'You are logged in!';
                    $this->addInfoMessage("Login successful!");
                    header('Location: ' . APP_ROOT);
                } else {
                    $this->setValidationError("inputUsernameEmail", "Wrong username/password combination.");}
            } else {
                $this->setValidationError("inputUsernameEmail", "Wrong username/password combination.");}
        }

    }

    function logout()
    {
        session_destroy();
        header('Location: ' . APP_ROOT);
        $this->addInfoMessage("Log out successful.");
    }

    function profile($name) {
        $user = $this->model->getCurrentUserInfo($name);
        $this->user = $user;
    }

}